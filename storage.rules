rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
service firebase.storage {
  match /b/{bucket}/o {
    // Allow users to upload profile pictures
    match /profile-pictures/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload review media
    match /reviews/{courseId}/{allPaths=**} {
      allow read: if true; // Public read access for approved reviews
      allow write: if request.auth != null; // Authenticated users can upload
    }
    
    // Allow admins to upload course images
    match /courses/{courseId}/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null; // For now, any authenticated user can upload
    }
    
    // Allow admins to upload site content
    match /site-content/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null; // For now, any authenticated user can upload
    }
    
    // Allow team member avatar uploads
    match /team-avatars/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null; // For now, any authenticated user can upload
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}